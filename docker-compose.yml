version: '3.8'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      PGPASSWORD: postgres_password
  redis:
    image: 'redis:latest'
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./client:/app
#    expose:
#      - 3000
#    ports:
#    - '3000:3000'
    command: npm run start
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
#    expose:
#      - 5000
#    ports:
#    - '5000:5000'
#    command: npm run dev
    environment:
      REDIS_HOST: redis # service name
      REDIS_PORT: 6379
      PGUSER: postgres
      PGHOST: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres_password
      PGPORT: 5432
    depends_on:
      - postgres
      - redis
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    environment:
      REDIS_HOST: redis # service name
      REDIS_PORT: 6379
    volumes:
      - /app/node_modules
      - ./worker:/app
    depends_on:
      - redis
  ngnix:
    restart: always
    build:
      context: ./ngnix
      dockerfile: Dockerfile.dev
    ports:
      - '3050:80' #<local-host>:<container>
    depends_on:
      - api
      - client